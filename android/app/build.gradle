apply plugin: "com.android.application"
apply plugin: "io.fabric"
apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"

import com.android.build.OutputFile

project.ext.react = [
        entryFile    : "index.js",
        bundleInDebug: false,
]

apply from: "../../node_modules/react-native/react.gradle"

def enableSeparateBuildPerCPUArchitecture = false
def enableProguardInReleaseBuilds = true

// Keystore and IAB license key
def secrets = new Properties()
def secretsFile = rootProject.file("secrets.properties")
if (!secretsFile.exists()) {
    logger.warn("secrets.properties did not exist. Creating a placeholder at ${secretsFile.getPath()}")
    secrets.setProperty("keystoreFile", "none")
    secrets.setProperty("keystoreKeyAlias", "none")
    secrets.setProperty("keystoreKeyPassword", "none")
    secrets.setProperty("inAppBillingLicenseKey", "\"none\"")
    secretsFile.createNewFile()
    secrets.store(new FileOutputStream(secretsFile), "Place the release signing key properties and the IAB license key here")
}
secrets.load(new FileInputStream(secretsFile))

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "com.rockbyte.arxiv"
        minSdkVersion 18
        targetSdkVersion 28
        versionCode 9
        versionName "1.0"
        ndk {
            abiFilters "armeabi-v7a", "arm-v8a", "x86", "x86-64"
        }

        // Detox (Tests and Automation Library)
        testBuildType System.getProperty('testBuildType', 'debug')
        missingDimensionStrategy "minReactNative", "minReactNative46"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            storeFile file(secrets['keystoreFile'])
            storePassword secrets['keystorePassword']
            keyAlias secrets['keystoreKeyAlias']
            keyPassword secrets['keystoreKeyPassword']
            v2SigningEnabled false
        }
    }
    compileOptions {
        encoding = 'UTF-8'
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false
            include "armeabi-v7a", "arm-v8a", "x86", "x86-64"
        }
    }
    buildTypes {
        buildTypes.each {
            it.buildConfigField "String", "IAB_LICENSE_KEY", secrets.getProperty('inAppBillingLicenseKey', 'null')
        }
        release {
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def versionCodes = ["armeabi-v7a": 1, "arm-v8a": 2, "x86": 3, "x86-64": 4]
            def abi = output.getFilter(OutputFile.ABI)
            if (abi != null) {  // null for the universal-debug, universal-release variants
                output.versionCodeOverride =
                        versionCodes.get(abi) * 1048576 + defaultConfig.versionCode
            }
        }
    }
}

dependencies {
    implementation project(':react-native-snackbar')
    implementation project(':react-native-billing')
    implementation project(':react-native-fetch-blob')
    implementation project(':react-native-firebase', {
        transitive = false
    })

    implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') {
        transitive = true
    }

    ext {
        appcompat_version = '28.0.0'
        playServices_version = '11.8.0'
        firebase_version = '11.8.0'
    }

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "com.android.support:appcompat-v7:${appcompat_version}"
    implementation "com.android.support:support-media-compat:${appcompat_version}"
    implementation "com.android.support:support-v4:${appcompat_version}"

    // RNFirebase required dependencies
    implementation "com.google.firebase:firebase-core:${firebase_version}"
    implementation "com.google.firebase:firebase-crash:${firebase_version}"
    implementation "com.google.android.gms:play-services-base:${playServices_version}"

    implementation 'com.facebook.react:react-native:0.20.1' //0.55.3  // From node_modules
    implementation project(':react-native-vector-icons')

    // Tests
    androidTestImplementation project(path: ":detox")
    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
}

apply plugin: 'com.google.gms.google-services'
